export const GRANT_REGISTRY_ABI = [
  'event GrantCreated(uint96 indexed id, address indexed owner, address indexed payee, string metaPtr)',
  'event GrantUpdated(uint96 indexed id, address indexed owner, address indexed payee, string metaPtr)',
  'function createGrant(address _owner, address _payee, string _metaPtr)',
  'function getAllGrants() view returns (tuple(uint96 id, address owner, address payee, string metaPtr)[])',
  'function getGrantPayee(uint96 _id) view returns (address)',
  'function getGrants(uint96 _startId, uint96 _endId) view returns (tuple(uint96 id, address owner, address payee, string metaPtr)[])',
  'function grantCount() view returns (uint96)',
  'function grants(uint96) view returns (uint96 id, address owner, address payee, string metaPtr)',
  'function updateGrant(uint96 _id, address _owner, address _payee, string _metaPtr)',
  'function updateGrantMetaPtr(uint96 _id, string _metaPtr)',
  'function updateGrantOwner(uint96 _id, address _owner)',
  'function updateGrantPayee(uint96 _id, address _payee)',
];

export const GRANT_ROUND_ABI = [
  'constructor(address _metadataAdmin, address _payoutAdmin, address _registry, address _donationToken, address _matchingToken, uint256 _startTime, uint256 _endTime, string _metaPtr)',
  'event MetadataUpdated(string oldMetaPtr, string indexed newMetaPtr)',
  'function addMatchingFunds(uint256 _amount)',
  'function donationToken() view returns (address)',
  'function endTime() view returns (uint256)',
  'function hasPaidOut() view returns (bool)',
  'function isActive() view returns (bool)',
  'function matchingToken() view returns (address)',
  'function metaPtr() view returns (string)',
  'function metadataAdmin() view returns (address)',
  'function payoutAdmin() view returns (address)',
  'function payoutGrants(address _payoutAddress)',
  'function registry() view returns (address)',
  'function startTime() view returns (uint256)',
  'function updateMetadataPtr(string _newMetaPtr)',
];

export const GRANT_ROUND_MANAGER_ABI = [
  'constructor(address _registry, address _donationToken, address _factory, address _weth)',
  'event GrantDonation(uint96 indexed grantId, address indexed tokenIn, uint256 donationAmount, address[] rounds)',
  'event GrantRoundCreated(address grantRound)',
  'function WETH9() view returns (address)',
  'function createGrantRound(address _owner, address _payoutAdmin, address _matchingToken, uint256 _startTime, uint256 _endTime, string _metaPtr)',
  'function donate(tuple(uint256 amountIn, uint256 amountOutMin, bytes path)[] _swaps, uint256 _deadline, tuple(uint96 grantId, address token, uint256 ratio, address[] rounds)[] _donations) payable',
  'function donationToken() view returns (address)',
  'function exactInput(tuple(bytes path, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum) params) payable returns (uint256 amountOut)',
  'function exactInputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountOut)',
  'function exactOutput(tuple(bytes path, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum) params) payable returns (uint256 amountIn)',
  'function exactOutputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountIn)',
  'function factory() view returns (address)',
  'function multicall(bytes[] data) payable returns (bytes[] results)',
  'function refundETH() payable',
  'function registry() view returns (address)',
  'function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
  'function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
  'function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
  'function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
  'function sweepToken(address token, uint256 amountMinimum, address recipient) payable',
  'function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable',
  'function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes _data)',
  'function unwrapWETH9(uint256 amountMinimum, address recipient) payable',
  'function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable',
];
